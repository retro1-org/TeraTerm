
add_custom_target(
  teraterm_ini
  DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/TERATERM.INI
  SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/release/TERATERM.INI
  SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/setini.pl
  COMMENT Generate "${CMAKE_CURRENT_BINARY_DIR}/TERATERM.INI"
  )

set_target_properties(
  teraterm_ini
  PROPERTIES FOLDER installer
  )

add_custom_command(
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/TERATERM.INI
  COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/setini.pl ${CMAKE_CURRENT_SOURCE_DIR}/release/TERATERM.INI > "${CMAKE_CURRENT_BINARY_DIR}/TERATERM.INI"
  )

install(CODE "execute_process(COMMAND \"${CMAKE_COMMAND}\" --build ${CMAKE_BINARY_DIR} --target teraterm_ini)")
install(
  FILES ${CMAKE_CURRENT_BINARY_DIR}/TERATERM.INI
  DESTINATION .
  )

set(RELEASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/release)

add_custom_target(
  lang_conv
  DEPENDS
    ${RELEASE_DIR}/lang_utf16le/Default.lng
    ${RELEASE_DIR}/lang_utf16le/English.lng
    ${RELEASE_DIR}/lang_utf16le/French.lng
    ${RELEASE_DIR}/lang_utf16le/German.lng
    ${RELEASE_DIR}/lang_utf16le/Japanese.lng
    ${RELEASE_DIR}/lang_utf16le/Korean.lng
    ${RELEASE_DIR}/lang_utf16le/Russian.lng
    "${RELEASE_DIR}/lang_utf16le/Simplified Chinese.lng"
    "${RELEASE_DIR}/lang_utf16le/Traditional Chinese.lng"
    ${RELEASE_DIR}/lang/Default.lng
    ${RELEASE_DIR}/lang/English.lng
    ${RELEASE_DIR}/lang/French.lng
    ${RELEASE_DIR}/lang/German.lng
    ${RELEASE_DIR}/lang/Japanese.lng
    ${RELEASE_DIR}/lang/Korean.lng
    ${RELEASE_DIR}/lang/Russian.lng
    "${RELEASE_DIR}/lang/Simplified Chinese.lng"
    "${RELEASE_DIR}/lang/Traditional Chinese.lng"
  SOURCES
    ${RELEASE_DIR}/lang_utf8/Default.lng
    ${RELEASE_DIR}/lang_utf8/English.lng
    ${RELEASE_DIR}/lang_utf8/French.lng
    ${RELEASE_DIR}/lang_utf8/German.lng
    ${RELEASE_DIR}/lang_utf8/Japanese.lng
    ${RELEASE_DIR}/lang_utf8/Korean.lng
    ${RELEASE_DIR}/lang_utf8/Russian.lng
    "${RELEASE_DIR}/lang_utf8/Simplified Chinese.lng"
    "${RELEASE_DIR}/lang_utf8/Traditional Chinese.lng"
  )

set_target_properties(
  lang_conv
  PROPERTIES FOLDER installer
  )

install(CODE "execute_process(COMMAND \"${CMAKE_COMMAND}\" --build ${CMAKE_BINARY_DIR} --target lang_conv)")

add_custom_command(
  OUTPUT
    ${RELEASE_DIR}/lang_utf16le/Default.lng
    ${RELEASE_DIR}/lang_utf16le/English.lng
    ${RELEASE_DIR}/lang_utf16le/French.lng
    ${RELEASE_DIR}/lang_utf16le/German.lng
    ${RELEASE_DIR}/lang_utf16le/Japanese.lng
    ${RELEASE_DIR}/lang_utf16le/Korean.lng
    ${RELEASE_DIR}/lang_utf16le/Russian.lng
    "${RELEASE_DIR}/lang_utf16le/Simplified Chinese.lng"
    "${RELEASE_DIR}/lang_utf16le/Traditional Chinese.lng"
    ${RELEASE_DIR}/lang/Default.lng
    ${RELEASE_DIR}/lang/English.lng
    ${RELEASE_DIR}/lang/French.lng
    ${RELEASE_DIR}/lang/German.lng
    ${RELEASE_DIR}/lang/Japanese.lng
    ${RELEASE_DIR}/lang/Korean.lng
    ${RELEASE_DIR}/lang/Russian.lng
    "${RELEASE_DIR}/lang/Simplified Chinese.lng"
    "${RELEASE_DIR}/lang/Traditional Chinese.lng"
    COMMAND ${CMAKE_COMMAND} -E make_directory ${RELEASE_DIR}/lang_utf16le
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/Default.lng ${RELEASE_DIR}/lang_utf16le/Default.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/English.lng ${RELEASE_DIR}/lang_utf16le/English.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/French.lng ${RELEASE_DIR}/lang_utf16le/French.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/German.lng ${RELEASE_DIR}/lang_utf16le/German.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/Japanese.lng ${RELEASE_DIR}/lang_utf16le/Japanese.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/Korean.lng ${RELEASE_DIR}/lang_utf16le/Korean.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le ${RELEASE_DIR}/lang_utf8/Russian.lng ${RELEASE_DIR}/lang_utf16le/Russian.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le "${RELEASE_DIR}/lang_utf8/Simplified Chinese.lng" "${RELEASE_DIR}/lang_utf16le/Simplified Chinese.lng"
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl utf16le "${RELEASE_DIR}/lang_utf8/Traditional Chinese.lng" "${RELEASE_DIR}/lang_utf16le/Traditional Chinese.lng"
    COMMAND ${CMAKE_COMMAND} -E make_directory ${RELEASE_DIR}/lang
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp1252 ${RELEASE_DIR}/lang_utf8/Default.lng ${RELEASE_DIR}/lang/Default.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp1252 ${RELEASE_DIR}/lang_utf8/English.lng ${RELEASE_DIR}/lang/English.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp1252 ${RELEASE_DIR}/lang_utf8/French.lng ${RELEASE_DIR}/lang/French.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp1252 ${RELEASE_DIR}/lang_utf8/German.lng ${RELEASE_DIR}/lang/German.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp932 ${RELEASE_DIR}/lang_utf8/Japanese.lng ${RELEASE_DIR}/lang/Japanese.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp949 ${RELEASE_DIR}/lang_utf8/Korean.lng ${RELEASE_DIR}/lang/Korean.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl windows-1251 ${RELEASE_DIR}/lang_utf8/Russian.lng ${RELEASE_DIR}/lang/Russian.lng
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp936 "${RELEASE_DIR}/lang_utf8/Simplified Chinese.lng" "${RELEASE_DIR}/lang/Simplified Chinese.lng"
    COMMAND ${PERL} ${CMAKE_CURRENT_SOURCE_DIR}/utf8_to.pl cp950 "${RELEASE_DIR}/lang_utf8/Traditional Chinese.lng" "${RELEASE_DIR}/lang/Traditional Chinese.lng"
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${RELEASE_DIR}/lang ${CMAKE_BINARY_DIR}/$<CONFIG>/lang
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${RELEASE_DIR}/lang_utf16le ${CMAKE_BINARY_DIR}/$<CONFIG>/lang_utf16le
  )


# copy .lng files
if(MSVC AND ("${MSVC_VERSION}" GREATER_EQUAL "1910"))
  # Visual Studio 2017以上の時
  add_custom_target(
    lang_copy
    DEPENDS
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Traditional Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Traditional Chinese.lng"
    SOURCES
      ${RELEASE_DIR}/lang_utf16le/Default.lng
      ${RELEASE_DIR}/lang_utf16le/English.lng
      ${RELEASE_DIR}/lang_utf16le/French.lng
      ${RELEASE_DIR}/lang_utf16le/German.lng
      ${RELEASE_DIR}/lang_utf16le/Japanese.lng
      ${RELEASE_DIR}/lang_utf16le/Korean.lng
      ${RELEASE_DIR}/lang_utf16le/Russian.lng
      "${RELEASE_DIR}/lang_utf16le/Simplified Chinese.lng"
      "${RELEASE_DIR}/lang_utf16le/Traditional Chinese.lng"
      ${RELEASE_DIR}/lang/Default.lng
      ${RELEASE_DIR}/lang/English.lng
      ${RELEASE_DIR}/lang/French.lng
      ${RELEASE_DIR}/lang/German.lng
      ${RELEASE_DIR}/lang/Japanese.lng
      ${RELEASE_DIR}/lang/Korean.lng
      ${RELEASE_DIR}/lang/Russian.lng
      "${RELEASE_DIR}/lang/Simplified Chinese.lng"
      "${RELEASE_DIR}/lang/Traditional Chinese.lng"
    )
  set_target_properties(
    lang_copy
    PROPERTIES FOLDER installer
    )
  add_custom_command(
    OUTPUT
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang/Traditional Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$(Configuration)/lang_utf16le/Traditional Chinese.lng"
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${RELEASE_DIR}/lang ${CMAKE_BINARY_DIR}/$<CONFIG>/lang
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${RELEASE_DIR}/lang_utf16le ${CMAKE_BINARY_DIR}/$<CONFIG>/lang_utf16le
    )
elseif(MINGW)
  # MinGW
  add_custom_target(
    lang_copy
    DEPENDS
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Traditional Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Traditional Chinese.lng"
    SOURCES
      ${RELEASE_DIR}/lang_utf16le/Default.lng
      ${RELEASE_DIR}/lang_utf16le/English.lng
      ${RELEASE_DIR}/lang_utf16le/French.lng
      ${RELEASE_DIR}/lang_utf16le/German.lng
      ${RELEASE_DIR}/lang_utf16le/Japanese.lng
      ${RELEASE_DIR}/lang_utf16le/Korean.lng
      ${RELEASE_DIR}/lang_utf16le/Russian.lng
      "${RELEASE_DIR}/lang_utf16le/Simplified Chinese.lng"
      "${RELEASE_DIR}/lang_utf16le/Traditional Chinese.lng"
      ${RELEASE_DIR}/lang/Default.lng
      ${RELEASE_DIR}/lang/English.lng
      ${RELEASE_DIR}/lang/French.lng
      ${RELEASE_DIR}/lang/German.lng
      ${RELEASE_DIR}/lang/Japanese.lng
      ${RELEASE_DIR}/lang/Korean.lng
      ${RELEASE_DIR}/lang/Russian.lng
      "${RELEASE_DIR}/lang/Simplified Chinese.lng"
      "${RELEASE_DIR}/lang/Traditional Chinese.lng"
    )
  set_target_properties(
    lang_copy
    PROPERTIES FOLDER installer
    )
  add_custom_command(
    OUTPUT
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang/Traditional Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Default.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/English.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/French.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/German.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Japanese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Korean.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Russian.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Simplified Chinese.lng"
      "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/lang_utf16le/Traditional Chinese.lng"
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${RELEASE_DIR}/lang ${CMAKE_BINARY_DIR}/lang
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${RELEASE_DIR}/lang_utf16le ${CMAKE_BINARY_DIR}/lang_utf16le
    )
endif()

install(
  DIRECTORY release/
  DESTINATION .
  PATTERN *~ EXCLUDE
  PATTERN TERATERM.INI EXCLUDE
  PATTERN lang_utf8 EXCLUDE
  )

install(
  FILES release/EDITOR.CNF
  DESTINATION .
  RENAME KEYBOARD.CNF
  )

# cygterm
if ((EXISTS "C:/cygwin64/bin") OR (EXISTS "C:/cygwin/bin"))
  install(CODE "execute_process(COMMAND \"${CMAKE_COMMAND}\" -P ${CMAKE_CURRENT_SOURCE_DIR}/build_cygterm.cmake)")

  install(
    FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/../cygterm/cygterm.exe
    ${CMAKE_CURRENT_SOURCE_DIR}/../cygterm/cygterm.cfg
    ${CMAKE_CURRENT_SOURCE_DIR}/../cygterm/cyglaunch.exe
    ${CMAKE_CURRENT_SOURCE_DIR}/../cygterm/cygterm+.tar.gz
    DESTINATION .
    )
  install(
    FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/../cygterm/cygterm.exe
    DESTINATION ./cygterm+-i686
    )
  install(
    FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/../cygterm/cygterm+-x86_64/cygterm.exe
    DESTINATION ./cygterm+-x86_64
    )
endif()

# Inno Setup
#  Create setup.exe
find_program(
  ISCC ISCC.exe
  HINTS "${CMAKE_SOURCE_DIR}/buildtools/innosetup6/bin"
  HINTS "C:/Program Files (x86)/Inno Setup 6/"
  HINTS "C:/Program Files (x86)/Inno Setup 5/"
  HINTS "C:/Program Files/Inno Setup 6/"
  HINTS "C:/Program Files/Inno Setup 5/"
  HINTS "$ENV{LOCALAPPDATA}/Programs/Inno Setup 6"
  HINTS "$ENV{LOCALAPPDATA}/Programs/Inno Setup 5"
  )
message("ISCC=${ISCC}")

if(MINGW)
  add_custom_target(
    inno_setup
    COMMAND "${CMAKE_COMMAND}" -E echo "inno setup can not create setup.exe on mingw"
    )
elseif("${ISCC}" STREQUAL "ISCC-NOTFOUND")
  add_custom_target(
    inno_setup
    COMMAND "${CMAKE_COMMAND}" -E echo "inno setup not found"
    )
else()
  add_custom_target(
    cygtool
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/cygtool.dll
    )

  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/cygtool.dll
    COMMAND ${CMAKE_COMMAND} -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR} -P build_cygtool.cmake
    COMMAND ${CMAKE_COMMAND} -E echo ${CMAKE_GENERATOR}
    WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/cygtool
    COMMENT Generate "${CMAKE_CURRENT_BINARY_DIR}/cygtool.dll"
    )

  install(
    FILES ${CMAKE_CURRENT_BINARY_DIR}/cygtool.dll
    DESTINATION .
    )

  configure_file(
    teraterm_cmake.iss.in teraterm_cmake.iss
    NEWLINE_STYLE CRLF
    )

  if (RELEASE)
    set(ISCC_OPTION "/DSETUP_RELEASE=1")
  endif()
  add_custom_target(
    inno_setup
#    COMMAND "${CMAKE_COMMAND}" --build . --target install
    COMMAND "${CMAKE_COMMAND}" -E echo "${ISCC} ${ISCC_OPTION} teraterm_cmake.iss"
    COMMAND "${ISCC}" ${ISCC_OPTION} teraterm_cmake.iss
    WORKING_DIRECTORY ${CMAKE_CURRENT_BUILD_DIR}
    )
endif()
set_target_properties(
  inno_setup
  PROPERTIES FOLDER installer
  )
set_target_properties(
  cygtool
  PROPERTIES FOLDER installer
  )

# zip
add_custom_target(
  zip
#  COMMAND "${CMAKE_COMMAND}" --build . --target install
  COMMAND "${CMAKE_COMMAND}" -E tar cvf ${SETUP_ZIP} --format=zip ${CMAKE_INSTALL_PREFIX}
  WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
  )

set_target_properties(
  zip
  PROPERTIES FOLDER installer
  )
